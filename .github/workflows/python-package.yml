# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pylint pytest poetry
          poetry install
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with pylint
        run: |
          poetry install
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          pylint ./parsematic/*.py --max-line-length 127 --max-branches 20 --exit-zero
      - name: Test with pytest
        run: |
          pytest

      - name: Report Coveralls (Linux)
        run: curl -sL https://coveralls.io/coveralls-linux.tar.gz | tar -xz && ./coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
